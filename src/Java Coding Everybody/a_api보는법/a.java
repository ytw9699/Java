package a_api보는법;
public class a {
public static void main(String[] args) {
	System.out.println(1);}}//}
	//https://docs.oracle.com/javase/8/docs/api/
	//여기서 System은 클래스
	// out 은 시스템 클래스의 변수중 하나인 객체인데 static 변수이다!그러니
	//시스템 클래스 객체생성안하고 가져다 쓰는거지
	//println()은 객체안에담겨진 메소드
	//그런데 이러한 시스템 클래스를 임포트한것도 아니고 만든것도 아닌데 어떻게쓸수있나?
	//import java.lang.*; // 자동으로 임포트 한다,,시스템은 자바랭패키지의 소속
	//자동으로 자바랭패키지의 클래스는 모두 임포트한다
	/*지금까지 무수히 많은 예제에서 사용했던 코드다. 
	이것이 화면에 어떤 내용을 출력하는 것이라는 건 이미 알고 있다. 
	하지만 도대체 우리가 정의한 적이 없는 이 명령은 무엇일까?를 생각해볼 때가 왔다.
	문법적으로 봤을 때 println은 메소드가 틀림없다. 
	그런데 메소드 앞에 Sytem.out이 있다. System은 클래스이고 out은
	그 클래스의 필드(변수)이다. 이 필드가 메소드를 가지고 있는 것은
	이 필드 역시 객체라는 것을 알 수 있다. 
	그리고 System을 인스턴스화 한적이 없음에도 불구하고 필드 out에 
	접근할 수 있는 것은 out이 static이라는 것을 암시한다.*/
	//PrintStream out = new PrintStream;//원래 이렇게 생성된거인듯
	//자바 에플리케이션을 만든다는 것은 결과적으로 자바에서 
	//제공하는 패키지들을 부품으로 조립해서 사용자 정의 로직을 만드는 과정이라고 할 수 있다
	//api=application programming interface
	//API란 자바 시스템을 제어하기 위해서 자바에서 제공하는 명령어들을 의미한다
	//필드=필드는 메소드가 아님 OUT같은게 필드임 =변수를말함
	//메소드=메소드는 메소드
	